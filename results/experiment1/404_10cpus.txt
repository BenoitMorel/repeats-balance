Experiment 1 !
sequences file : ../data/404/404.phy
partitions file : ../data/404/404.part
number of tree to generate : 10
number of cpus : 10
number of taxa : 404
size of sequences : 13158
number of partitions : 11

Naive : 
Total sites number = 13158
Total weight       = 993.005
Max weight         = 291.104
Weight ratio       = 0.658883 ((max - average) / max)
Max partitions     = 0
Sites per cpu      = 3742 802 1646 588 852 828 1437 1218 1020 1025 
Weight per cpu     = 291.104 92.3151 197.97 13.1489 18.6526 154.275 107.402 85.3871 7.71216 25.0372 
Sites per cpu      = 2 1 1 1 1 1 1 1 1 1 

Kassian : 
Total sites number = 13158
Total weight       = 1087.89
Max weight         = 193.102
Weight ratio       = 0.436623 ((max - average) / max)
Max partitions     = 0
Sites per cpu      = 1315 1315 1316 1316 1316 1316 1316 1316 1316 1316 
Weight per cpu     = 116.511 138.834 193.102 52.7792 32.9305 50.4243 103.206 128.712 160.509 110.883 
Sites per cpu      = 2 2 2 2 2 2 2 2 2 2 

Kassian weighted : 
Total sites number = 13158
Total weight       = 1074.49
Max weight         = 124.769
Weight ratio       = 0.138821 ((max - average) / max)
Max partitions     = 0
Sites per cpu      = 1753 1421 1366 2246 1281 832 1440 809 750 1260 
Weight per cpu     = 111.826 124.769 109.754 102.744 96.8462 99.3821 98.4615 110.538 114.744 105.419 
Sites per cpu      = 2 2 2 2 2 2 2 2 2 2 

Expectations with the sites repeats (if the sites repeats computation time is negligible and without the constant partition cost)): 
Speedup [no SR, parall] -> // [SR (kassian), parall] : 6.80988
Speedup [no SR, parall] -> // [SR (kassian weighted), parall] : 10.5395
Speedup [Kassian, parall] -> [Kassian weighted, parall] : 1.54767
Speedup [no SR, sequential] => [SR (kassian weighted), parall] 105.459


